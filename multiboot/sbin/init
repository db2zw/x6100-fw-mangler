#!/bin/sh
# (C) 2023 Joerg Jungermann, GPLv2 see LICENSE

PS4='> ${0##*/}[$$]: '
set -e
set -x

#- if not run as pid 1, pass to busybox init
  if [ ! $$ = 1 ]; then
    exec /bin/busybox init "$@"
  fi

#- enforce busybox mount
  mount()  { /bin/busybox mount  "$@"; }
  umount() { /bin/busybox umount "$@"; }

#- emergency trap
  trap "exec /bin/sh" EXIT

#- mount proc and dev
  mount -t proc proc /proc
  grep " /dev " /proc/mounts > /dev/null || \
    mount -t devtmpfs devtmpfs /dev
  exec < /dev/console > /dev/console 2>&1

#- helper for init
  init() {
    eval "$( grep -oE "x6100_multiboot=[^ ]+" /proc/cmdline )"
    [ -n "/$x6100_multiboot" ] || \
      x6100_multiboot=Default
    [ -d "/$x6100_multiboot" ] || \
      x6100_multiboot=Default

    if [ ! -d "/$x6100_multiboot" ]; then
      echo "E: boot target $x6100_multiboot does not exist, dropping to emergency shell." >&2
      exit 1
    fi

    mount -o bind "/$x6100_multiboot" /mnt
    pivot_root /mnt /mnt/mnt
    cd /

    mount -t proc proc /proc
    umount /mnt/proc
    mount -o move /mnt/dev /dev

    exec /bin/sh -e -c " \
      PS4='> ${0##*/}[\$$]: '; \
      set -x; \
      umount /proc; \
      umount /mnt; \
      exec /sbin/init; \
    " # eo /bin/sh

    echo "E: this should not have happened, dropping to emergency shell." >&2
    exit 1
  }

#- execute init accoding to parameter x6100_multiboot on kernel cmdline
  [ -x /flash-emmc.sh ] || \
    init

#- flash emmc
  #- prepare environment
  PS4='-!- flash[$$]: '
  mount -t tmpfs mediafs /media

#- override poweroff call in ./flash-emmc.sh
  poweroff() {
    set +e
    sync
    grep /dev/ /proc/mounts | while read what where _; do 
      mount -o remount -r $where || :
    done
    mount
    /bin/busybox poweroff -f
  }
  . /flash-emmc.sh
